@model IEnumerable<articles01.Models.Category>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{ ViewData["Title"] = "Category table";
    Layout = "~/Pages/Shared/_LayoutAdmin.cshtml"; }

<h1>Index</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Create New Category</a>
</p>

<div style="display: inline-block;">
    <form method="get" asp-action="Search">
        <input type="search" name="SearchItem" class="search-field" />
        <input type="submit" value="search" class="btn-primary" />
    </form>
</div>

@{ var searchItem = ViewContext.HttpContext.Request.Query["SearchItem"].ToString(); }

@if (!string.IsNullOrEmpty(searchItem))
{
<div style="display: inline-block;">
    <form method="get" asp-action="Index">
        <input type="submit" value="reset" class="btn-primary" />
    </form>
</div>}


<table class="table table-dark table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Id)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
        <a style="font-family:Cairo;" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
        <a style="font-family:Cairo;" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
    </td>
</tr>}
    </tbody>
</table>

@{ var isFirstPage = Model == null || Model.Count() < 5;
    var previousPageId = isFirstPage ? 0 : Model.First().Id - 6;
    var isLastPage = Model != null && Model.Count() < 5;
}
@if (isLastPage)
{
<a asp-action="Index" asp-route-id="@previousPageId">Previous</a>}

@if (!isFirstPage)
{
<a asp-action="Index" asp-route-id="@previousPageId">Previous</a>}

@if (Model != null && Model.Count() >= 5)
{
    var nextPageId = Model.Last().Id;
<a asp-action="Index" asp-route-id="@nextPageId">Next</a>}
